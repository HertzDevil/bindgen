# Built-in types for Bindgen.
# Describes sane defaults to map built-in C/C++ types to Crystal.

void: { binding_type: Void, kind: Struct, builtin: true }

# Boolean type
_Bool: { binding_type: Bool, crystal_type: Bool, cpp_type: bool, kind: Struct, builtin: true }
bool: { binding_type: Bool, crystal_type: Bool, cpp_type: bool, kind: Struct, builtin: true }

# Integer types
char: { binding_type: UInt8, kind: Struct, builtin: true }
"unsigned char": { binding_type: UInt8, kind: Struct, builtin: true }
short: { binding_type: Int16, kind: Struct, builtin: true }
"unsigned short": { binding_type: UInt16, kind: Struct, builtin: true }
int: { binding_type: Int32, kind: Struct, builtin: true }
unsigned: { binding_type: UInt32, kind: Struct, builtin: true }
"unsigned int": { binding_type: UInt32, kind: Struct, builtin: true }
"unsigned long int": { binding_type: UInt32, kind: Struct, builtin: true }
"unsigned long long": { binding_type: UInt64, kind: Struct, builtin: true }
"unsigned long long int": { binding_type: UInt64, kind: Struct, builtin: true }

# Long types
if_os_is_windows: # LLP64
  long: { binding_type: Int32, kind: Struct, builtin: true }
  "unsigned long": { binding_type: UInt32, kind: Struct, builtin: true }
else: # LP64
  long: { binding_type: Int64, kind: Struct, builtin: true }
  "unsigned long": { binding_type: UInt64, kind: Struct, builtin: true }

int8_t: { binding_type: Int8, kind: Struct, builtin: true }
int16_t: { binding_type: Int16, kind: Struct, builtin: true }
int32_t: { binding_type: Int32, kind: Struct, builtin: true }
int64_t: { binding_type: Int64, kind: Struct, builtin: true }
uint8_t: { binding_type: UInt8, kind: Struct, builtin: true }
uint16_t: { binding_type: UInt16, kind: Struct, builtin: true }
uint32_t: { binding_type: UInt32, kind: Struct, builtin: true }
uint64_t: { binding_type: UInt64, kind: Struct, builtin: true }

size_t: { binding_type: "LibC::SizeT", kind: Struct, builtin: true }
ssize_t: { binding_type: "LibC::SsizeT", kind: Struct, builtin: true }

# Float types
float: { binding_type: Float32, kind: Struct, builtin: true }
double: { binding_type: Float64, kind: Struct, builtin: true }

# Qt specific types
uchar: { binding_type: UInt8, kind: Struct, builtin: true }
ushort: { binding_type: UInt16, kind: Struct, builtin: true }
uint: { binding_type: UInt32, kind: Struct, builtin: true }
if_os_is_windows: # LLP64
  ulong: { binding_type: UInt32, kind: Struct, builtin: true }
else: # LP64
  ulong: { binding_type: UInt64, kind: Struct, builtin: true }
ulonglong: { binding_type: UInt64, kind: Struct, builtin: true }

if_pointersize_is_32:
  qptrdiff: { binding_type: Int32, kind: Struct, builtin: true }
  qintptr: { binding_type: Int32, kind: Struct, builtin: true }
  quintptr: { binding_type: UInt32, kind: Struct, builtin: true }
else:
  qptrdiff: { binding_type: Int64, kind: Struct, builtin: true }
  qintptr: { binding_type: Int64, kind: Struct, builtin: true }
  quintptr: { binding_type: UInt64, kind: Struct, builtin: true }

quint8: { binding_type: UInt8, kind: Struct, builtin: true }
quint16: { binding_type: UInt16, kind: Struct, builtin: true }
quint32: { binding_type: UInt32, kind: Struct, builtin: true }
quint64: { binding_type: UInt64, kind: Struct, builtin: true }
qulonglong: { binding_type: UInt64, kind: Struct, builtin: true }
qint8: { binding_type: Int8, kind: Struct, builtin: true }
qint16: { binding_type: Int16, kind: Struct, builtin: true }
qint32: { binding_type: Int32, kind: Struct, builtin: true }
qint64: { binding_type: Int64, kind: Struct, builtin: true }
qlonglong: { binding_type: Int64, kind: Struct, builtin: true }

if_architecture_is_arm: # Only Float32 on ARM
  qreal: { binding_type: Float32, kind: Struct, builtin: true }
if_architecture_is_armhf:
  qreal: { binding_type: Float32, kind: Struct, builtin: true }
else: # Float64 on everything else
  qreal: { binding_type: Float64, kind: Struct, builtin: true }

# Bindgen specific
CrystalProc:
  binding_type: CrystalProc
  kind: Struct
  pass_by: Value
  wrapper_pass_by: Reference
